@Article{Munk2011,
author="Munk, Harm
and Ayguad{\'e}, Eduard
and Bastoul, C{\'e}dric
and Carpenter, Paul
and Chamski, Zbigniew
and Cohen, Albert
and Cornero, Marco
and Dumont, Philippe
and Duranton, Marc
and Fellahi, Mohammed
and Ferrer, Roger
and Ladelsky, Razya
and Lindwer, Menno
and Martorell, Xavier
and Miranda, Cupertino
and Nuzman, Dorit
and Ornstein, Andrea
and Pop, Antoniu
and Pop, Sebastian
and Pouchet, Louis-No{\"e}l
and Ram{\'i}rez, Alex
and R{\'o}denas, David
and Rohou, Erven
and Rosen, Ira
and Shvadron, Uzi
and Trifunovi{\'{c}}, Konrad
and Zaks, Ayal",
title="ACOTES Project: Advanced Compiler Technologies for Embedded Streaming",
journal="International Journal of Parallel Programming",
year="2011",
volume="39",
number="3",
pages="397--450",
abstract="Streaming applications are built of data-driven, computational components, consuming and producing unbounded data streams. Streaming oriented systems have become dominant in a wide range of domains, including embedded applications and DSPs. However, programming efficiently for streaming architectures is a challenging task, having to carefully partition the computation and map it to processes in a way that best matches the underlying streaming architecture, taking into account the distributed resources (memory, processing, real-time requirements) and communication overheads (processing and delay). These challenges have led to a number of suggested solutions, whose goal is to improve the programmer's productivity in developing applications that process massive streams of data on programmable, parallel embedded architectures. StreamIt is one such example. Another more recent approach is that developed by the ACOTES project (Advanced Compiler Technologies for Embedded Streaming). The ACOTES approach for streaming applications consists of compiler-assisted mapping of streaming tasks to highly parallel systems in order to maximize cost-effectiveness, both in terms of energy and in terms of design effort. The analysis and transformation techniques automate large parts of the partitioning and mapping process, based on the properties of the application domain, on the quantitative information about the target systems, and on programmer directives. This paper presents the outcomes of the ACOTES project, a 3-year collaborative work of industrial (NXP, ST, IBM, Silicon Hive, NOKIA) and academic (UPC, INRIA, MINES ParisTech) partners, and advocates the use of Advanced Compiler Technologies that we developed to support Embedded Streaming.",
issn="1573-7640",
doi="10.1007/s10766-010-0132-7",
url="http://dx.doi.org/10.1007/s10766-010-0132-7"
}

